"use strict";(self.webpackChunkjustice40_tool=self.webpackChunkjustice40_tool||[]).push([[612],{36639:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: function() { return /* binding */ components_SubPageNav; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(96540);\n// EXTERNAL MODULE: ./node_modules/@trussworks/react-uswds/lib/index.js\nvar lib = __webpack_require__(17292);\n// EXTERNAL MODULE: ./node_modules/gatsby-plugin-intl/index.js\nvar gatsby_plugin_intl = __webpack_require__(23218);\n// EXTERNAL MODULE: ./src/components/LinkTypeWrapper/index.tsx + 2 modules\nvar LinkTypeWrapper = __webpack_require__(75618);\n// EXTERNAL MODULE: ./src/data/constants.tsx\nvar constants = __webpack_require__(4328);\n// EXTERNAL MODULE: ./src/data/copy/common.tsx + 3 modules\nvar common = __webpack_require__(5635);\n;// ./src/components/SubPageNav/SubPageNav.module.scss\n// extracted by mini-css-extract-plugin\nvar subPageNavContainer = \"SubPageNav-module--subPageNavContainer--IQUre\";\n;// ./src/components/SubPageNav/SubPageNav.tsx\n// This prop is used to set which sub-page navigation is active\n/**\n * This function will take in an endpoint (last segment of the app's URL) and return the appropriate\n * string to find the i18n label\n *\n * @param {string} endPoint\n * @return {string}\n */const getPageConstant=endPoint=>{const intl=(0,gatsby_plugin_intl.useIntl)();if(endPoint===constants/* PAGES_ENDPOINTS */.ken.EXPLORE){return intl.formatMessage(common/* HEADER */.El.EXPLORE);}else if(endPoint===constants/* PAGES_ENDPOINTS */.ken.METHODOLOGY){return intl.formatMessage(common/* HEADER */.El.METHODOLOGY);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.DOWNLOADS){return intl.formatMessage(common/* HEADER */.El.DOWNLOADS);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.TSD){return intl.formatMessage(common/* HEADER */.El.TSD);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.ABOUT){return intl.formatMessage(common/* HEADER */.El.ABOUT);}else if(endPoint===constants/* PAGES_ENDPOINTS */.ken.FAQS){return intl.formatMessage(common/* HEADER */.El.FAQS);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.PUBLIC_ENG){return intl.formatMessage(common/* HEADER */.El.PUBLIC_ENG);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.CONTACT){return intl.formatMessage(common/* HEADER */.El.CONTACT);}else if(endPoint==constants/* PAGES_ENDPOINTS */.ken.PREVIOUS_VERSIONS){return intl.formatMessage(common/* HEADER */.El.PREVIOUS_VERSIONS);};};/**\n * The main component. It will take in an array of endpoints that the sub-nan should navigate to. It will\n * also take an optional prop that will determine which sub-nav link should be highlighted when the page\n * loads. If the activeSubPageIndex is not provided, it will default to the first index to highlight the\n * first endpoint in the array.\n *\n * @param {number} activeSubPageIndex\n * @param {string[]} endPoints\n * @return {JSX}\n */const SubPageNav=_ref=>{let{activeSubPageIndex=0,endPoints}=_ref;const subPages=endPoints.map((endPoint,index)=>/*#__PURE__*/react.createElement(LinkTypeWrapper/* default */.A,{key:index,className:activeSubPageIndex===index?'usa-current':'',url:endPoint,internal:true,linkText:getPageConstant(endPoint)}));// const subPages = [\n//   <LinkTypeWrapper\n//     key={0}\n//     className={activeSubPageIndex === 1 ? 'usa-current' : ''}\n//     url={PAGES_ENDPOINTS.METHODOLOGY}\n//     internal={true}\n//     linkText={intl.formatMessage(COMMON_COPY.HEADER.METHODOLOGY)}\n//   />,\n//   <LinkTypeWrapper\n//     key={1}\n//     className={activeSubPageIndex === 2 ? 'usa-current' : ''}\n//     url={PAGES_ENDPOINTS.DOWNLOADS}\n//     internal={true}\n//     linkText={intl.formatMessage(COMMON_COPY.HEADER.DOWNLOADS)}\n//   />,\n// ];\nreturn/*#__PURE__*/react.createElement(\"div\",{className:subPageNavContainer},/*#__PURE__*/react.createElement(lib.SideNav,{items:subPages}));};/* harmony default export */ var SubPageNav_SubPageNav = (SubPageNav);\n;// ./src/components/SubPageNav/index.tsx\n/* harmony default export */ var components_SubPageNav = (SubPageNav_SubPageNav);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36639\n")},12419:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ pages_methodology; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@trussworks/react-uswds/lib/index.js\nvar lib = __webpack_require__(17292);\n// EXTERNAL MODULE: ./node_modules/gatsby-plugin-intl/index.js\nvar gatsby_plugin_intl = __webpack_require__(23218);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(96540);\n// EXTERNAL MODULE: ./node_modules/react-use/esm/useWindowSize.js + 3 modules\nvar useWindowSize = __webpack_require__(79835);\n// EXTERNAL MODULE: ./src/data/copy/methodology.tsx\nvar methodology = __webpack_require__(80992);\n;// ./src/components/CategoryCard/CategoryCard.module.scss\n// extracted by mini-css-extract-plugin\nvar categoryCard = "CategoryCard-module--categoryCard--bdVo+";\nvar idAsDisdvantaged = "CategoryCard-module--idAsDisdvantaged--jLRKA";\n;// ./src/components/CategoryCard/CategoryCard.tsx\nconst CategoryCard=_ref=>{let{categoryInfo}=_ref;return/*#__PURE__*/react.createElement("div",{className:categoryCard},/*#__PURE__*/react.createElement("h3",null,categoryInfo.TITLE),/*#__PURE__*/react.createElement("p",{className:idAsDisdvantaged},methodology/* CATEGORY */.XJ.ID_AS_DISADV_TEXT),/*#__PURE__*/react.createElement("p",null,categoryInfo.IF),/*#__PURE__*/react.createElement("p",null,categoryInfo.AND));};/* harmony default export */ var CategoryCard_CategoryCard = (CategoryCard);\n;// ./src/components/CategoryCard/index.tsx\n/* harmony default export */ var components_CategoryCard = (CategoryCard_CategoryCard);\n// EXTERNAL MODULE: ./src/components/J40MainGridContainer.tsx\nvar J40MainGridContainer = __webpack_require__(21481);\n;// ./src/components/Categories/Categories.module.scss\n// extracted by mini-css-extract-plugin\nvar categoriesContainer = "Categories-module--categoriesContainer--P6XJg";\nvar tribalLandsPara = "Categories-module--tribalLandsPara--fcOe8";\n;// ./src/components/Categories/Categories.tsx\nconst categories=[methodology/* CATEGORIES */.R6.CLIMATE_CHANGE,methodology/* CATEGORIES */.R6.CLEAN_ENERGY,methodology/* CATEGORIES */.R6.HEALTH_BURDENS,methodology/* CATEGORIES */.R6.AFFORDABLE_HOUSING,methodology/* CATEGORIES */.R6.LEGACY_POLLUTION,methodology/* CATEGORIES */.R6.CLEAN_TRANSPORT,methodology/* CATEGORIES */.R6.CLEAN_WATER,methodology/* CATEGORIES */.R6.WORKFORCE_DEV];const Categories=()=>{const intl=(0,gatsby_plugin_intl.useIntl)();return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,null,/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:8},/*#__PURE__*/react.createElement("h2",null,methodology/* CATEGORY */.XJ.HEADING),/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA3)),/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA4)),/*#__PURE__*/react.createElement("p",null,methodology/* FORMULA */.rP.PARA6)))),/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,{className:categoriesContainer},categories.map((category,index)=>/*#__PURE__*/react.createElement(components_CategoryCard,{key:index,categoryInfo:category}))),/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,null,/*#__PURE__*/react.createElement(lib.Grid,{row:true,className:tribalLandsPara},/*#__PURE__*/react.createElement(lib.Grid,{col:8},/*#__PURE__*/react.createElement("h2",null,intl.formatMessage(methodology/* PAGE */.KL.SUB_HEADING_2)),/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA5))))));};/* harmony default export */ var Categories_Categories = (Categories);\n;// ./src/components/Categories/index.tsx\n/* harmony default export */ var components_Categories = (Categories_Categories);\n;// ./src/components/DatasetCard/datasetCard.module.scss\n// extracted by mini-css-extract-plugin\nvar datasetCard = "datasetCard-module--datasetCard--TWiij";\nvar datasetCardAdditional = "datasetCard-module--datasetCardAdditional--YlXlp";\nvar datasetCardDescription = "datasetCard-module--datasetCardDescription--3fXY-";\nvar datasetCardHeader = "datasetCard-module--datasetCardHeader--eEw5m";\nvar datasetCardIndicator = "datasetCard-module--datasetCardIndicator--hJkC+";\nvar datasetCardLabels = "datasetCard-module--datasetCardLabels--rOWg4";\nvar datasetCardList = "datasetCard-module--datasetCardList--9H+FE";\nvar datasetCardListItem = "datasetCard-module--datasetCardListItem--JwLz-";\nvar datasetCardListItemSource = "datasetCard-module--datasetCardListItemSource--p-+oD";\nvar datasetCardWhatIsIt = "datasetCard-module--datasetCardWhatIsIt--Xge7i";\nvar newTag = "datasetCard-module--newTag--GEQp6";\nvar tagContainer = "datasetCard-module--tagContainer--Hg2tn";\n;// ./src/components/DatasetCard/DatasetCard.tsx\n/* eslint-disable valid-jsdoc *//**\n * This component will take in a card and render a dataset card\n *\n * @param {IDatasetCardProps}\n * @return {JSX.Element}\n */const DatasetCard=_ref=>{let{datasetCardProps}=_ref;const intl=(0,gatsby_plugin_intl.useIntl)();const isNoteAtEnd=datasetCardProps.domID===\'ling-iso\'?true:false;return/*#__PURE__*/react.createElement("div",{className:datasetCard,id:datasetCardProps.domID},/*#__PURE__*/react.createElement("div",{className:datasetCardProps.isNew?datasetCardHeader:\'\'},datasetCardProps.isNew&&/*#__PURE__*/react.createElement("div",{className:tagContainer},/*#__PURE__*/react.createElement(lib.Tag,{className:newTag},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.NEW))),/*#__PURE__*/react.createElement("h3",{className:datasetCardIndicator},datasetCardProps.indicator)),/*#__PURE__*/react.createElement("div",{className:datasetCardDescription},datasetCardProps.description),datasetCardProps.note&&!isNoteAtEnd&&/*#__PURE__*/react.createElement("div",{className:datasetCardDescription},/*#__PURE__*/react.createElement("p",null,datasetCardProps.note)),/*#__PURE__*/react.createElement("ul",{className:datasetCardList},datasetCardProps.usedIn!==methodology/* CATEGORIES */.R6.OMIT&&/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.USED_IN)),datasetCardProps.usedIn),/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.RESP_PARTY)),datasetCardProps.responsibleParty),datasetCardProps.sources.map((dataSource,index)=>/*#__PURE__*/react.createElement(react.Fragment,{key:index},/*#__PURE__*/react.createElement("li",{className:datasetCardListItemSource},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.SOURCE)),dataSource.source,dataSource.isNew&&/*#__PURE__*/react.createElement(react.Fragment,null,"\\u2002",/*#__PURE__*/react.createElement(lib.Tag,{className:newTag},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.NEW))),dataSource.isUpdated&&/*#__PURE__*/react.createElement(react.Fragment,null,"\\u2002",/*#__PURE__*/react.createElement(lib.Tag,{className:newTag},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.UPDATED)))),/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(methodology/* DATASET_CARD_LABELS */.qg.AVAILABLE_FOR)),intl.formatMessage(dataSource.availableFor))))),datasetCardProps.note&&isNoteAtEnd&&/*#__PURE__*/react.createElement("div",{className:datasetCardDescription},/*#__PURE__*/react.createElement("p",null,datasetCardProps.note)));};/* harmony default export */ var DatasetCard_DatasetCard = (DatasetCard);\n;// ./src/components/DatasetCard/index.tsx\n/* harmony default export */ var components_DatasetCard = (DatasetCard_DatasetCard);\n// EXTERNAL MODULE: ./cypress/integration/common/helpers.js\nvar helpers = __webpack_require__(91684);\n;// ./src/components/DatasetContainer/dsContainer.module.scss\n// extracted by mini-css-extract-plugin\nvar alignItemsCenter = "dsContainer-module--alignItemsCenter--IGi9q";\nvar datasetCardsContainer = "dsContainer-module--datasetCardsContainer--bxPR0";\nvar returnToTop = "dsContainer-module--returnToTop--9iJ7e";\n// EXTERNAL MODULE: ./src/data/constants.tsx\nvar constants = __webpack_require__(4328);\n;// ./src/components/DatasetContainer/index.tsx\n// import DatasetsButton from \'../DatasetsButton\';\nconst DatasetContainer=()=>{const intl=(0,gatsby_plugin_intl.useIntl)();return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,{fullWidth:true,blueBackground:false},/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,{dataCy:`${(0,helpers/* hyphenizeString */.o)(methodology/* DATASETS */.yC.HEADING.defaultMessage)}-block`},/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:12},/*#__PURE__*/react.createElement("h2",null,methodology/* DATASETS_RICH_TEXT */.zI.HEADING))),/*#__PURE__*/react.createElement(lib.Grid,{row:true,gap:true,className:alignItemsCenter},/*#__PURE__*/react.createElement(lib.Grid,{desktop:{col:7}},/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* DATASETS */.yC.INFO)),/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* DATASETS */.yC.CENSUS_DISCLAIMER))),/*#__PURE__*/react.createElement(lib.Grid,{desktop:{col:1}}),/*#__PURE__*/react.createElement(lib.Grid,{desktop:{col:4}})),/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:12},/*#__PURE__*/react.createElement("div",{className:datasetCardsContainer},methodology/* INDICATORS */.Xo.map((card,index)=>/*#__PURE__*/react.createElement(components_DatasetCard,{key:index,datasetCardProps:card}))))),/*#__PURE__*/react.createElement("div",{className:returnToTop},/*#__PURE__*/react.createElement(gatsby_plugin_intl.Link,{className:\'usa-link\',to:constants/* PAGES_ENDPOINTS */.ken.METHODOLOGY},methodology/* RETURN_TO_TOP */.jj.LINK)))));};/* harmony default export */ var components_DatasetContainer = (DatasetContainer);\n// EXTERNAL MODULE: ./src/components/layout.tsx + 15 modules\nvar layout = __webpack_require__(81462);\n// EXTERNAL MODULE: ./src/components/SubPageNav/index.tsx + 2 modules\nvar SubPageNav = __webpack_require__(36639);\n;// ./src/pages/methodology.tsx\n// import DatasetsButton from \'../components/DatasetsButton\';\nconst IndexPage=_ref=>{let{location}=_ref;const intl=(0,gatsby_plugin_intl.useIntl)();const{width}=(0,useWindowSize/* default */.A)();return/*#__PURE__*/react.createElement(layout/* default */.A,{location:location,title:intl.formatMessage(methodology/* PAGE */.KL.TITLE)},/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.A,null,/*#__PURE__*/react.createElement("section",{className:\'page-heading\'},/*#__PURE__*/react.createElement("h1",null,intl.formatMessage(methodology/* PAGE */.KL.HEADING))),/*#__PURE__*/react.createElement(lib.Grid,{row:true,gap:true,className:\'j40-mt3\'},/*#__PURE__*/react.createElement(lib.Grid,{col:12,tablet:{col:8}},/*#__PURE__*/react.createElement("section",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1)),/*#__PURE__*/react.createElement("div",null,/*#__PURE__*/react.createElement("ul",null,/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1_BULLET1))),/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1_BULLET2))),/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1_BULLET3)),/*#__PURE__*/react.createElement("ul",null,/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1_BULLET3_2))))),/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("p",null,intl.formatMessage(methodology/* PAGE */.KL.PARA1_BULLET4))))))),/*#__PURE__*/react.createElement(lib.Grid,{col:12,tablet:{col:1}}),width>constants/* USWDS_BREAKPOINTS */.ArX.DESKTOP?/*#__PURE__*/react.createElement(lib.Grid,{col:12,tablet:{col:3}},/*#__PURE__*/react.createElement(SubPageNav/* default */.A,{endPoints:[constants/* PAGES_ENDPOINTS */.ken.METHODOLOGY,constants/* PAGES_ENDPOINTS */.ken.DOWNLOADS,constants/* PAGES_ENDPOINTS */.ken.PREVIOUS_VERSIONS]})):\'\')),/*#__PURE__*/react.createElement(components_Categories,null),/*#__PURE__*/react.createElement(components_DatasetContainer,null));};/* harmony default export */ var pages_methodology = (IndexPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12419\n')}}]);